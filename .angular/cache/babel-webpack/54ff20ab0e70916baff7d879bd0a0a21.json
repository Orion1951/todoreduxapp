{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as fromActions from './todo.actions';\nimport { Todo } from '../models/todo.models';\nexport const initialState = [new Todo('Salvar al mundo'), new Todo('Encontrar las gemas del infinito'), new Todo('Vencer a thanos')];\n\nconst _todoReducer = createReducer(initialState, on(fromActions.crear, (state, {\n  texto\n}) => [...state, new Todo(texto)]), on(fromActions.editar, (state, {\n  id,\n  texto\n}) => {\n  return state.map(todo => {\n    if (todo.id == id) {\n      return Object.assign(Object.assign({}, todo), {\n        texto: texto\n      });\n    } else {\n      return todo;\n    }\n  });\n}), on(fromActions.toggle, (state, {\n  id\n}) => {\n  return state.map(todo => {\n    if (todo.id == id) {\n      return Object.assign(Object.assign({}, todo), {\n        completado: !todo.completado\n      });\n    } else {\n      return todo;\n    }\n  });\n}), on(fromActions.borrar, (state, {\n  id\n}) => {\n  return state.filter(todo => todo.id !== id);\n}), on(fromActions.toggleAll, (state, {\n  completado\n}) => state.map(todo => {\n  return Object.assign(Object.assign({}, todo), {\n    completado: completado\n  });\n})), on(fromActions.clearCompleted, state => state.filter(todo => !todo.completado)));\n\nexport function todoReducer(state, action) {\n  return _todoReducer(state, action);\n}","map":null,"metadata":{},"sourceType":"module"}